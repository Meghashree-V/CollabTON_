{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garvl\\\\OneDrive\\\\Desktop\\\\CollabTON_\\\\ton-collab-hub\\\\src\\\\components\\\\SolveIssues.js\",\n  _s = $RefreshSig$();\n// src/components/SolveIssues.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SolveIssues() {\n  _s();\n  const [issues, setIssues] = useState([{\n    id: 1,\n    title: 'Bug in AI Algorithm',\n    description: 'The AI algorithm throws errors when processing large datasets.'\n  }, {\n    id: 2,\n    title: 'UI Bug in Landing Page',\n    description: 'The buttons on the landing page are misaligned on mobile devices.'\n  }]);\n  const solveIssue = id => {\n    setIssues(issues.filter(issue => issue.id !== id)); // Remove the solved issue from the list\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Solve Issues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), issues.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no issues to solve right now. Check back later!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: issues.map(issue => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: issue.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: issue.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => solveIssue(issue.id),\n          children: \"Solve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, issue.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(SolveIssues, \"d0PeX6sVCZkn1EfiNadDe2geeRo=\");\n_c = SolveIssues;\nexport default SolveIssues;\nvar _c;\n$RefreshReg$(_c, \"SolveIssues\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SolveIssues","_s","issues","setIssues","id","title","description","solveIssue","filter","issue","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/garvl/OneDrive/Desktop/CollabTON_/ton-collab-hub/src/components/SolveIssues.js"],"sourcesContent":["// src/components/SolveIssues.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction SolveIssues() {\r\n  const [issues, setIssues] = useState([\r\n    { id: 1, title: 'Bug in AI Algorithm', description: 'The AI algorithm throws errors when processing large datasets.' },\r\n    { id: 2, title: 'UI Bug in Landing Page', description: 'The buttons on the landing page are misaligned on mobile devices.' },\r\n  ]);\r\n\r\n  const solveIssue = (id) => {\r\n    setIssues(issues.filter(issue => issue.id !== id));  // Remove the solved issue from the list\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Solve Issues</h2>\r\n      {issues.length === 0 ? (\r\n        <p>There are no issues to solve right now. Check back later!</p>\r\n      ) : (\r\n        <ul>\r\n          {issues.map((issue) => (\r\n            <li key={issue.id}>\r\n              <h3>{issue.title}</h3>\r\n              <p>{issue.description}</p>\r\n              <button onClick={() => solveIssue(issue.id)}>Solve</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SolveIssues;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CACnC;IAAEO,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,WAAW,EAAE;EAAiE,CAAC,EACtH;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,wBAAwB;IAAEC,WAAW,EAAE;EAAoE,CAAC,CAC7H,CAAC;EAEF,MAAMC,UAAU,GAAIH,EAAE,IAAK;IACzBD,SAAS,CAACD,MAAM,CAACM,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAE;EACvD,CAAC;EAED,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBZ,MAAM,CAACa,MAAM,KAAK,CAAC,gBAClBhB,OAAA;MAAAW,QAAA,EAAG;IAAyD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEhEf,OAAA;MAAAW,QAAA,EACGR,MAAM,CAACc,GAAG,CAAEP,KAAK,iBAChBV,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKD,KAAK,CAACJ;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBf,OAAA;UAAAW,QAAA,EAAID,KAAK,CAACH;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1Bf,OAAA;UAAQkB,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACE,KAAK,CAACL,EAAE,CAAE;UAAAM,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHpDL,KAAK,CAACL,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CA5BQD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}